name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      storage_account_name: ${{ steps.get_storage_name.outputs.storage_account_name }}
      storage_account_key: ${{ steps.get_storage_key.outputs.storage_account_key }}
      storage_container_name: ${{ steps.get_storage_key.outputs.storage_container_name }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve

    # - name: Terraform destroy
    #   run: terraform destroy -auto-approve

    - name: Get Storage Account Name from Terraform
      id: get_storage_name
      run: |
        STORAGE_NAME=$(terraform output -raw storage_account_name | sed 's/::debug::.*//' | tr -d '\n')
        echo "storage_account_name=$STORAGE_NAME" >> $GITHUB_ENV

    - name: Get Storage Account Key from Terraform
      id: get_storage_key
      run: |
        STORAGE_ACCOUNT_KEY=$(terraform output -raw storage_account_key | sed 's/::debug::.*//')
        echo "storage_account_key=$STORAGE_ACCOUNT_KEY" >> $GITHUB_ENV

    - name: Get Storage Container Name from Terraform
      id: get_container_name
      run: |
        STORAGE_CONTAINER_NAME=$(terraform output -raw storage_container_name | sed 's/::debug::.*//' | tr -d '\n')
        echo "storage_container_name=$STORAGE_CONTAINER_NAME" >> $GITHUB_ENV


  build-and-test:
    name: Build and Deploy React App
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Clear npm cache
        run: |
          npm cache clean --force

      - name: defining working directory
        run: |
          pwd

      - name: Install dependencies
        run: |
          npm install -g azure-cli
          npm install
        # working-directory: ./react-app

      - name: check aws cli version
        run: az --version

      - name: build project
        run: npm run build
        # working-directory: ./react-app

      - name: List build folder contents
        run: |
          ls /home/runner/work/github-actions-with-terraform/github-actions-with-terraform
          ls -ltr build && pwd build

      - name: remove node module
        run: rm -rf /home/runner/work/github-actions-with-terraform/github-actions-with-terraform/node_modules

      - name: Upload React App to Azure Blob Storage
        run: |
          az storage blob upload-batch --destination react-calculator --source ./build/*
